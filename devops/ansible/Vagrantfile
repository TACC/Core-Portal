# -*- mode: ruby -*-
# vi: set ft=ruby :

overrides = "#{__FILE__}.local"
if File.exist?(overrides)
    eval File.read(overrides)
end

VM_PORTAL_NAME = defined?(LOCAL_VM_PORTAL_NAME) ? LOCAL_VM_PORTAL_NAME : "ut-portal"
VM_PORTAL_IP = defined?(LOCAL_VM_PORTAL_IP) ? LOCAL_VM_PORTAL_IP : "172.28.128.4"
VM_PORTAL_MEMORY = defined?(LOCAL_VM_PORTAL_MEMORY) ? LOCAL_VM_PORTAL_MEMORY : 1024
VM_WORKERS_NAME = defined?(LOCAL_VM_WORKERS_NAME) ? LOCAL_VM_WORKERS_NAME : "ut-workers"
VM_WORKERS_IP = defined?(LOCAL_VM_WORKERS_IP) ? LOCAL_VM_WORKERS_IP : "172.28.128.5"
VM_WORKERS_MEMORY = defined?(LOCAL_VM_WORKERS_MEMORY) ? LOCAL_VM_WORKERS_MEMORY : 1024
VM_WORKERS_CPUS = defined?(LOCAL_VM_WORKERS_CPUS) ? LOCAL_VM_WORKERS_CPUS : 2
VM_ELASTICSEARCH_NAME = defined?(LOCAL_VM_ELASTICSEARCH_NAME) ? LOCAL_VM_ELASTICSEARCH_NAME : "ut-elasticsearch"
VM_ELASTICSEARCH_IP = defined?(LOCAL_VM_ELASTICSEARCH_IP) ? LOCAL_VM_ELASTICSEARCH_IP : "172.28.128.6"
VM_ELASTICSEARCH_MEMORY = defined?(LOCAL_VM_ELASTICSEARCH_MEMORY) ? LOCAL_VM_ELASTICSEARCH_MEMORY : 4096
PROJECT_DIR = defined?(LOCAL_PROJECT_DIR) ? LOCAL_PROJECT_DIR : "../project"
PROJECT_MOUNT = defined?(LOCAL_PROJECT_MOUNT) ? LOCAL_PROJECT_MOUNT  : "/srv/www/project"
ANSIBLE_VERBOSITY = defined?(LOCAL_ANSIBLE_VERBOSITY) ? LOCAL_ANSIBLE_VERBOSITY : true
VIRTUALBOX_CABLE = defined?(LOCAL_VIRTUALBOX_CABLE) ? LOCAL_VIRTUALBOX_CABLE : false

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.ssh.forward_agent = true
  config.vm.box = "bento/centos-7.3"

  config.vm.define VM_PORTAL_NAME do |portal|
    portal.vm.hostname = VM_PORTAL_NAME
    portal.vm.network "private_network", ip: VM_PORTAL_IP
    portal.vm.synced_folder PROJECT_DIR, PROJECT_MOUNT, owner: 106, group: "vagrant", mount_options: ["dmode=775"]
    portal.vm.provider "virtualbox" do |vb|
      vb.name = VM_PORTAL_NAME
      vb.memory = 1024
    end
  end

  config.vm.define VM_WORKERS_NAME do |workers|
    workers.vm.hostname = VM_WORKERS_NAME
    workers.vm.network "private_network", ip: VM_WORKERS_IP
    workers.vm.synced_folder PROJECT_DIR, PROJECT_MOUNT, owner: 106, group: "vagrant", mount_options: ["dmode=775"]
    workers.vm.provider "virtualbox" do |vb|
      vb.name = VM_WORKERS_NAME
      vb.memory = 1024
      vb.cpus = 2
    end
  end

  config.vm.define VM_ELASTICSEARCH_NAME do |elasticsearch|
    #portal.vm.synced_folder "../project", "/srv/www/project", owner: 106, group: 111
    elasticsearch.vm.hostname = VM_ELASTICSEARCH_NAME
    elasticsearch.vm.network "private_network", ip: VM_ELASTICSEARCH_IP
    elasticsearch.vm.provider "virtualbox" do |vb|
      vb.name = VM_ELASTICSEARCH_NAME
      vb.memory = 4096
    end
  end

  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "conf/provisioning/ansible/playbooks/local.yml"
    ansible.verbose = ANSIBLE_VERBOSITY
    ansible.groups = {
      "ansible" => [VM_PORTAL_NAME, VM_WORKERS_NAME, VM_ELASTICSEARCH_NAME]
    }
    ansible.extra_vars = {
      portal_upgrade: 'true'
    }
  end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  #config.vm.network "private_network", type: "dhcp"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
    #vb.gui = true
    if VIRTUALBOX_CABLE
        vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
