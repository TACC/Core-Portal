export const compressApp = {
  definition: {
    sharedAppCtx: true,
    isPublic: true,
    tenant: 'portals',
    id: 'compress',
    version: '0.0.1',
    description: 'Compress a file or folder for download.',
    owner: 'wma_prtl',
    enabled: true,
    runtime: 'SINGULARITY',
    runtimeVersion: '3.7.2',
    runtimeOptions: ['SINGULARITY_RUN'],
    containerImage: 'library://rstijerina/taccapps/compress:latest',
    jobType: 'BATCH',
    maxJobs: 2147483647,
    maxJobsPerUser: 2147483647,
    strictFileInputs: false,
    jobAttributes: {
      description: 'Compress a file or folder for download.',
      dynamicExecSystem: false,
      execSystemConstraints: null,
      execSystemId: 'frontera',
      execSystemExecDir: '${JobWorkingDir}',
      execSystemInputDir: '${JobWorkingDir}/input',
      execSystemOutputDir: '${JobWorkingDir}/output',
      execSystemLogicalQueue: 'development',
      archiveSystemId: 'cloud.data.community',
      archiveSystemDir:
        'HOST_EVAL($HOME)/tapis-jobs-archive/${JobCreateDate}/${JobName}-${JobUUID}',
      archiveOnAppError: false,
      isMpi: false,
      mpiCmd: null,
      cmdPrefix: null,
      parameterSet: {
        appArgs: [
          {
            arg: 'Archive',
            name: 'Archive File Name',
            description:
              'Output archive file name. The selected Compression Type will be appended to this filename.',
            inputMode: 'REQUIRED',
            notes: {},
          },
          {
            arg: 'tgz',
            name: 'Compression Type',
            description:
              'Select the type of compressed file, either a Gzipped TAR file (.tar.gz) or a Zip file (.zip).',
            inputMode: 'REQUIRED',
            notes: {
              enum_values: [
                {
                  tgz: 'tar.gz',
                },
                {
                  zip: 'zip',
                },
              ],
            },
          },
        ],
        containerArgs: [],
        schedulerOptions: [
          {
            arg: '--tapis-profile tacc',
            name: 'TACC Scheduler Profile',
            description: 'Scheduler profile for HPC clusters at TACC',
            inputMode: 'FIXED',
            notes: {},
          },
          {
            arg: '--job-name ${JobName}',
            name: 'Slurm job name',
            description:
              'Set the slurm job name to be identical to the Tapis job name.',
            inputMode: 'FIXED',
            notes: {},
          },
        ],
        envVariables: [],
        archiveFilter: {
          includes: [],
          excludes: ['tapisjob.out'],
          includeLaunchFiles: false,
        },
      },
      fileInputs: [
        {
          name: 'Target path to be compressed',
          description: 'The directory or file to be compressed.',
          inputMode: 'OPTIONAL',
          autoMountLocal: true,
          sourceUrl: null,
          targetPath: '*',
        },
      ],
      fileInputArrays: [],
      nodeCount: 1,
      coresPerNode: 1,
      memoryMB: 100,
      maxMinutes: 10,
      subscriptions: [],
      tags: [],
    },
    tags: [],
    notes: {
      label: 'Compress',
      hideNodeCountAndCoresPerNode: true,
    },
    uuid: '93d32d84-9a8c-4fc1-9de6-df709300ab09',
    deleted: false,
    created: '2023-03-08T22:38:04.173744Z',
    updated: '2023-03-16T22:23:12.889327Z',
  },
  exec_sys: {
    isPublic: true,
    isDynamicEffectiveUser: true,
    tenant: 'portals',
    id: 'frontera',
    description: 'System for running jobs on the Frontera HPC system.',
    systemType: 'LINUX',
    owner: 'wma_prtl',
    host: 'frontera.tacc.utexas.edu',
    enabled: true,
    effectiveUserId: 'sal',
    defaultAuthnMethod: 'PKI_KEYS',
    authnCredential: null,
    bucketName: null,
    rootDir: '/',
    port: 22,
    useProxy: false,
    proxyHost: null,
    proxyPort: -1,
    dtnSystemId: null,
    dtnMountPoint: null,
    dtnMountSourcePath: null,
    isDtn: false,
    canExec: true,
    canRunBatch: true,
    enableCmdPrefix: false,
    mpiCmd: null,
    jobRuntimes: [
      {
        runtimeType: 'SINGULARITY',
        version: null,
      },
    ],
    jobWorkingDir: 'HOST_EVAL($SCRATCH)/tapis/${JobUUID}',
    jobEnvVariables: [],
    jobMaxJobs: 2147483647,
    jobMaxJobsPerUser: 2147483647,
    batchScheduler: 'SLURM',
    batchLogicalQueues: [
      {
        name: 'normal',
        hpcQueueName: 'normal',
        maxJobs: -1,
        maxJobsPerUser: 100,
        minNodeCount: 3,
        maxNodeCount: 512,
        minCoresPerNode: 1,
        maxCoresPerNode: 56,
        minMemoryMB: 1,
        maxMemoryMB: 192000,
        minMinutes: 1,
        maxMinutes: 2880,
      },
      {
        name: 'development',
        hpcQueueName: 'development',
        maxJobs: -1,
        maxJobsPerUser: 1,
        minNodeCount: 1,
        maxNodeCount: 40,
        minCoresPerNode: 1,
        maxCoresPerNode: 56,
        minMemoryMB: 1,
        maxMemoryMB: 192000,
        minMinutes: 1,
        maxMinutes: 120,
      },
    ],
    batchDefaultLogicalQueue: 'normal',
    batchSchedulerProfile: 'tacc',
    jobCapabilities: [],
    tags: [],
    notes: {},
    importRefId: null,
    uuid: 'ca524f9e-6574-4a40-a075-0429c807d6c8',
    deleted: false,
    created: '2022-12-06T22:52:06.300829Z',
    updated: '2022-12-06T22:52:06.300829Z',
  },
  license: {
    type: null,
  },
};

export default compressApp;
