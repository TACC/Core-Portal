@import url('./styles/global.css');

/*
  Sectioning Root
  ===
  https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Sectioning_root
*/

body {
  margin: 0;
  font-family: "Roboto", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  /* FAQ: Use variable to allow min-height change w/out overwriting styles */
  /* WARNING: Must NOT use keyword; must use unit; or use in `calc` will fail */
  /* stylelint-disable length-zero-no-unit */
  --min-height: 0px;
  --min-width: 0px;
  /* stylelint-enable length-zero-no-unit */
  min-height: var(--min-height);
  min-width: var(--min-width);
}

/*
  Inline Text Semantics
  ===
  https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Inline_text_semantics
*/

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New", monospace;
}

/*
  External Layout
  ===
  Expand, to fill desired space, any wrapper elements
  that are outside scope of the application codebase
*/

/* Allow expansion (with no respect to ancestors and siblings)

    <html>
      <body>…</body>
    </html>
*/
/* FAQ: The CMS applies a `margin-top` on the `<html>` */
/* FAQ: The `html` and `body` boxes are only as tall as their content
        (which may be shorter than window height), cannot have siblings elements
        (would be influenced by force stretch), so force stretch outward. */
html,
body {
  /* As a stretched item */
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}

/* Allow expansion (with respect to ancestors and siblings)

    <body>
      <div class="content">
        <div id="react-root">
          <div class="…">…</div>
        </div>
      </div>
    </body>
*/
/* FAQ: Shared hosting with CMS renders header and footer siblings */
/* FAQ: The `.content` and `#react-root` boxes are only as tall as their content
        (which may be shorter than window height), can have siblings elements
        (would be influenced by force stretch), so gently stretch outward. */
body {
  /* As a flex container */
  display: flex;
  flex-direction: column;
}
body > .content {
  /* As a flex item */
  flex-grow: 1;

  /* As a flex container */
  display: flex;
  flex-direction: column;
}
#react-root {
  /* As a flex item */
  flex-grow: 1;

  /* As a stretched item container */
  position: relative;
}
#react-root > :only-child {
  /* As a stretched item */
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}

/* FP-546: If this style has become unnecessary, then remove it */
.btn-link,
.btn-link:hover {
  color: var(--global-color-accent--normal);
}
