.workbench-wrapper {
    display: flex;
    flex-direction: row;

    color: #484848;
    height: 100%;
}
.workbench-content {
    /* Styles as a flex child */
    flex-grow: 1;

    /* Styles as a flex parent */
    display: flex;
    flex-direction: column;
}
/* FAQ: If the workbench content has only a single child,
        then it should be the same height as the app root */
.workbench-content > :only-child {
    height: 100%;
}

.workbench-content .wb-text-primary {
    color: #484848;
}

.workbench-content .wb-text-secondary {
    color: #707070;
}

.workbench-content .wb-bold {
  font-weight: 500;
}

#spin-sun {
    text-align: center;
}

.workbench-content .btn-link, .workbench-content .wb-link {
  color: #9d85ef;
}

.workbench-content .badge-success {
  background-color: #43D130;
}

.workbench-content .badge-warning {
  background-color: #C7CE1D;
  color: white;
}

.workbench-content .ReactTable .rt-thead.-header  {
  box-shadow: none;
  border-bottom: 1px solid #707070;
  font-weight: 500;
}

.workbench-content .ReactTable {
  border: none;
}

.workbench-content .ReactTable .rt-tbody .rt-tr-group {
  border-bottom: 1px solid rgba(112, 112, 112, 0.25);
}

.workbench-content .ReactTable .rt-thead .rt-th.-sort-asc:after, .ReactTable .rt-thead .rt-td.-sort-asc:after {
  margin-left: 10px;
  font-family: "Font Awesome 5 Free";
  content: "\f0dd";
  display: inline-block;
  vertical-align: middle;
  font-weight: 900;
}

.workbench-content .ReactTable .rt-thead .rt-th.-sort-desc, .workbench-content .ReactTable .rt-thead .rt-td.-sort-desc,
.workbench-content .ReactTable .rt-thead .rt-th.-sort-asc, .workbench-content .ReactTable .rt-thead .rt-td.-sort-asc {
  box-shadow: none;
  display: flex;
  color: #484848;
}

.workbench-content .ReactTable .rt-thead .rt-th.-sort-desc:after, .ReactTable .rt-thead .rt-td.-sort-desc:after {
  margin-left: 10px;
  font-family: "Font Awesome 5 Free";
  content: "\f0de";
  display: inline-block;
  vertical-align: middle;
  font-weight: 900;
}

.workbench-content .ReactTable .rt-table {
  border-bottom: 1px solid #707070;
}

.workbench-content .ReactTable .rt-thead .rt-th, .ReactTable .rt-thead .rt-td {
  border-right: none;
}

.workbench-content .ReactTable .rt-tbody .rt-td {
  border-right: none;
}

/* Overrides Bootstrap `.row`, because we need to
   "undo" two horizontal instances of Bootstrap `.row`'s. */
.workbench-content .row {
  margin-right: -30px;
  margin-left: -30px;
}

.workbench-content .ReactTable {
  max-height: inherit;
}

.workbench-content .ReactTable .btn {
  padding: 0;
  font-size: inherit;
  width: -webkit-fill-available;
}

.workbench-content .ReactTable .btn span {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  display: block;
  width: inherit;
  text-align: left;
}

.workbench-content .ReactTable .rt-thead .rt-tr {
  text-align: left;
}

.workbench-content .ReactTable .rt-noData {
  position: relative;
  pointer-events: inherit;
  transform: none;
  -webkit-transform: none;
  left: auto;
  top: auto;
}

/* Align content tables to the left by undoing some Bootstrap */
.workbench-content .container {
    margin-left: 0; /* override `margin-left: auto;` (Bootstrap Grid) */
}
/* Prevent width constraint for Extra Large breakpoint */
/* TODO: Support Bootstrap mixins, or find another why to make this DRY */
/* SEE: https://getbootstrap.com/docs/4.0/layout/grid/#example-usage */
@media (min-width: 1200px) {
    .workbench-content .container {
        max-width: none;
    }
}
/* Mimic `.container { max-width: â€¦ }` (Bootstrap Grid) for "Extra Extra Large" breakpoint */
/* WARN: Non-standard un-documented first-party breakpoint */
@media (min-width: 1700px) {
    .workbench-content .container {
        max-width: 1645px;
    }
}
