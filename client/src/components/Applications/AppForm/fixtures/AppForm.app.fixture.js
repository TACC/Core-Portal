export const helloWorldAppFixture = {
  definition: {
    sharedAppCtx: true,
    isPublic: true,
    tenant: 'portals',
    id: 'hello-world',
    version: '0.0.1',
    description:
      'Sleeps for 3m. Then prints a configurable Hello World greeting to a target file.',
    owner: 'wma_prtl',
    enabled: true,
    runtime: 'SINGULARITY',
    runtimeVersion: '3.7.2',
    runtimeOptions: ['SINGULARITY_RUN'],
    containerImage: 'library://rstijerina/taccapps/hello-world:latest',
    jobType: 'BATCH',
    maxJobs: 2147483647,
    maxJobsPerUser: 2147483647,
    strictFileInputs: true,
    jobAttributes: {
      description: 'Hello world from ${JobOwner}',
      dynamicExecSystem: false,
      execSystemConstraints: null,
      execSystemId: 'frontera',
      execSystemExecDir: '${JobWorkingDir}',
      execSystemInputDir: '${JobWorkingDir}',
      execSystemOutputDir: '${JobWorkingDir}/output',
      execSystemLogicalQueue: 'development',
      archiveSystemId: 'frontera',
      archiveSystemDir:
        'HOST_EVAL($HOME)/tapis-jobs-archive/${JobCreateDate}/${JobName}-${JobUUID}',
      archiveOnAppError: true,
      isMpi: false,
      mpiCmd: null,
      cmdPrefix: null,
      parameterSet: {
        appArgs: [
          {
            arg: 'hello',
            name: 'Greeting',
            description: 'Choose a greeting to give to your target',
            inputMode: 'REQUIRED',
            notes: {
              enum_values: [
                {
                  hello: 'Hello',
                },
                {
                  hola: 'Hola',
                },
                {
                  wassup: 'Wassup',
                },
              ],
            },
          },
          {
            arg: 'world',
            name: 'Target',
            description: 'Whom to address your greeting',
            inputMode: 'REQUIRED',
            notes: {},
          },
          {
            arg: '30',
            name: 'Sleep Time',
            description: 'How long to sleep before app execution',
            inputMode: 'REQUIRED',
            notes: {
              fieldType: 'number',
            },
          },
        ],
        containerArgs: [],
        schedulerOptions: [
          {
            arg: '--tapis-profile tacc',
            name: 'TACC Scheduler Profile',
            description: 'Scheduler profile for HPC clusters at TACC',
            inputMode: 'FIXED',
            notes: {},
          },
          {
            arg: '--job-name ${JobName}',
            name: 'Slurm job name',
            description:
              'Set the slurm job name to be identical to the Tapis job name.',
            inputMode: 'FIXED',
            notes: {},
          },
        ],
        envVariables: [],
        archiveFilter: {
          includes: [],
          excludes: [],
          includeLaunchFiles: true,
        },
      },
      fileInputs: [
        {
          name: 'File to modify',
          description:
            'The full greeting will be appended to the target .txt file',
          inputMode: 'OPTIONAL',
          autoMountLocal: true,
          sourceUrl: null,
          targetPath: 'in.txt',
        },
      ],
      fileInputArrays: [],
      nodeCount: 1,
      coresPerNode: 1,
      memoryMB: 100,
      maxMinutes: 10,
      subscriptions: [],
      tags: [],
    },
    tags: [],
    notes: {
      label: 'Hello World (Sleep 3m)',
      helpUrl: 'https://readthedocs.tacc.utexas.edu/hpcugs/frontera/frontera/',
      hideNodeCountAndCoresPerNode: true,
    },
    uuid: 'de2bce33-8dbc-479e-b8a2-6a9d27d583d1',
    deleted: false,
    created: '2022-12-12T23:40:16.158241Z',
    updated: '2023-02-14T21:45:08.818354Z',
  },
  execSystems: [
    {
      isPublic: true,
      isDynamicEffectiveUser: true,
      tenant: 'portals',
      id: 'frontera',
      description: 'System for running jobs on the Frontera HPC system.',
      systemType: 'LINUX',
      owner: 'wma_prtl',
      host: 'frontera.tacc.utexas.edu',
      enabled: true,
      effectiveUserId: 'nathanf',
      defaultAuthnMethod: 'PKI_KEYS',
      authnCredential: null,
      bucketName: null,
      rootDir: '/',
      port: 22,
      useProxy: false,
      proxyHost: null,
      proxyPort: -1,
      dtnSystemId: null,
      dtnMountPoint: null,
      dtnMountSourcePath: null,
      isDtn: false,
      canExec: true,
      canRunBatch: true,
      enableCmdPrefix: false,
      mpiCmd: null,
      jobRuntimes: [
        {
          runtimeType: 'SINGULARITY',
          version: null,
        },
      ],
      jobWorkingDir: 'HOST_EVAL($SCRATCH)/tapis/${JobUUID}',
      jobEnvVariables: [],
      jobMaxJobs: 2147483647,
      jobMaxJobsPerUser: 2147483647,
      batchScheduler: 'SLURM',
      batchLogicalQueues: [
        {
          name: 'normal',
          hpcQueueName: 'normal',
          maxJobs: -1,
          maxJobsPerUser: 100,
          minNodeCount: 3,
          maxNodeCount: 512,
          minCoresPerNode: 1,
          maxCoresPerNode: 56,
          minMemoryMB: 1,
          maxMemoryMB: 192000,
          minMinutes: 1,
          maxMinutes: 2880,
        },
        {
          name: 'development',
          hpcQueueName: 'development',
          maxJobs: -1,
          maxJobsPerUser: 1,
          minNodeCount: 1,
          maxNodeCount: 40,
          minCoresPerNode: 1,
          maxCoresPerNode: 56,
          minMemoryMB: 1,
          maxMemoryMB: 192000,
          minMinutes: 1,
          maxMinutes: 120,
        },
        {
          name: 'small',
          hpcQueueName: 'small',
          maxJobs: -1,
          maxJobsPerUser: 20,
          minNodeCount: 1,
          maxNodeCount: 2,
          minCoresPerNode: 1,
          maxCoresPerNode: 56,
          minMemoryMB: 1,
          maxMemoryMB: 192000,
          minMinutes: 1,
          maxMinutes: 2880,
        },
        {
          name: 'rtx',
          hpcQueueName: 'rtx',
          maxJobs: -1,
          maxJobsPerUser: 15,
          minNodeCount: 1,
          maxNodeCount: 2,
          minCoresPerNode: -1,
          maxCoresPerNode: -1,
          minMemoryMB: 1,
          maxMemoryMB: 128000,
          minMinutes: 1,
          maxMinutes: 2880,
        },
      ],
      batchDefaultLogicalQueue: 'normal',
      batchSchedulerProfile: 'tacc',
      jobCapabilities: [],
      tags: [],
      notes: {},
      importRefId: null,
      uuid: 'ca524f9e-6574-4a40-a075-0429c807d6c8',
      deleted: false,
      created: '2022-12-06T22:52:06.300829Z',
      updated: '2022-12-06T22:52:06.300829Z',
    },
    {
      isPublic: true,
      isDynamicEffectiveUser: true,
      sharedWithUsers: [],
      tenant: 'portals',
      id: 'ls6',
      description: 'System for running jobs on the Lonestar6 HPC system.',
      systemType: 'LINUX',
      owner: 'wma_prtl',
      host: 'ls6.tacc.utexas.edu',
      enabled: true,
      effectiveUserId: 'cyemparala',
      defaultAuthnMethod: 'PKI_KEYS',
      authnCredential: null,
      bucketName: null,
      rootDir: '/',
      port: 22,
      useProxy: false,
      proxyHost: null,
      proxyPort: -1,
      dtnSystemId: null,
      canExec: true,
      canRunBatch: true,
      enableCmdPrefix: true,
      mpiCmd: null,
      jobRuntimes: [
        {
          runtimeType: 'SINGULARITY',
          version: null,
        },
      ],
      jobWorkingDir: 'HOST_EVAL($SCRATCH)/tapis/${JobUUID}',
      jobEnvVariables: [],
      jobMaxJobs: 2147483647,
      jobMaxJobsPerUser: 2147483647,
      batchScheduler: 'SLURM',
      batchLogicalQueues: [
        {
          name: 'gpu-a100',
          hpcQueueName: 'gpu-a100',
          maxJobs: -1,
          maxJobsPerUser: 40,
          minNodeCount: 1,
          maxNodeCount: 16,
          minCoresPerNode: 1,
          maxCoresPerNode: 128,
          minMemoryMB: 1,
          maxMemoryMB: 256000,
          minMinutes: 1,
          maxMinutes: 2880,
        },
        {
          name: 'gpu-a100-dev',
          hpcQueueName: 'gpu-a100-dev',
          maxJobs: -1,
          maxJobsPerUser: 1,
          minNodeCount: 1,
          maxNodeCount: 2,
          minCoresPerNode: 1,
          maxCoresPerNode: 128,
          minMemoryMB: 1,
          maxMemoryMB: 256000,
          minMinutes: 1,
          maxMinutes: 120,
        },
        {
          name: 'gpu-a100-small',
          hpcQueueName: 'gpu-a100-small',
          maxJobs: -1,
          maxJobsPerUser: 4,
          minNodeCount: 1,
          maxNodeCount: 4,
          minCoresPerNode: 1,
          maxCoresPerNode: 32,
          minMemoryMB: 1,
          maxMemoryMB: 256000,
          minMinutes: 1,
          maxMinutes: 2880,
        },
        {
          name: 'large',
          hpcQueueName: 'large',
          maxJobs: -1,
          maxJobsPerUser: 20,
          minNodeCount: 65,
          maxNodeCount: 256,
          minCoresPerNode: 1,
          maxCoresPerNode: 128,
          minMemoryMB: 1,
          maxMemoryMB: 256000,
          minMinutes: 1,
          maxMinutes: 2880,
        },
        {
          name: 'normal',
          hpcQueueName: 'normal',
          maxJobs: -1,
          maxJobsPerUser: 200,
          minNodeCount: 1,
          maxNodeCount: 64,
          minCoresPerNode: 1,
          maxCoresPerNode: 128,
          minMemoryMB: 1,
          maxMemoryMB: 256000,
          minMinutes: 1,
          maxMinutes: 2880,
        },
        {
          name: 'debug',
          hpcQueueName: 'debug',
          maxJobs: -1,
          maxJobsPerUser: 30,
          minNodeCount: 1,
          maxNodeCount: 576,
          minCoresPerNode: 1,
          maxCoresPerNode: 128,
          minMemoryMB: 1,
          maxMemoryMB: 256000,
          minMinutes: 1,
          maxMinutes: 2880,
        },
        {
          name: 'development',
          hpcQueueName: 'development',
          maxJobs: -1,
          maxJobsPerUser: 3,
          minNodeCount: 1,
          maxNodeCount: 4,
          minCoresPerNode: 1,
          maxCoresPerNode: 128,
          minMemoryMB: 1,
          maxMemoryMB: 256000,
          minMinutes: 1,
          maxMinutes: 120,
        },
        {
          name: 'vm-small',
          hpcQueueName: 'vm-small',
          maxJobs: -1,
          maxJobsPerUser: 4,
          minNodeCount: 1,
          maxNodeCount: 1,
          minCoresPerNode: 1,
          maxCoresPerNode: 16,
          minMemoryMB: 1,
          maxMemoryMB: 256000,
          minMinutes: 1,
          maxMinutes: 2880,
        },
      ],
      batchDefaultLogicalQueue: 'normal',
      batchSchedulerProfile: 'tacc-apptainer',
      jobCapabilities: [],
      tags: [],
      notes: {},
      importRefId: null,
      uuid: '50e0b7c8-3998-45e5-8dc5-05918ff9a660',
      allowChildren: false,
      parentId: null,
      deleted: false,
      created: '2023-03-29T22:14:06.864267Z',
      updated: '2024-02-28T16:06:02.803491Z',
    },
  ],
  license: {
    type: null,
  },
};

export const helloWorldAppSubmissionPayloadFixture = {
  job: {
    fileInputs: [],
    parameterSet: {
      appArgs: [
        {
          name: 'Greeting',
          arg: 'hello',
        },
        {
          name: 'Target',
          arg: 'world',
        },
        {
          name: 'Sleep Time',
          arg: '30',
        },
      ],
      containerArgs: [],
      schedulerOptions: [
        {
          name: 'TACC Allocation',
          description: 'The TACC allocation associated with this job execution',
          include: true,
          arg: '-A TACC-ACI',
        },
      ],
      envVariables: [],
    },
    name: 'hello-world-0.0.1',
    nodeCount: 1,
    coresPerNode: 1,
    maxMinutes: 10,
    archiveSystemId: 'frontera',
    archiveSystemDir:
      'HOST_EVAL($HOME)/tapis-jobs-archive/${JobCreateDate}/${JobName}-${JobUUID}',
    archiveOnAppError: true,
    appId: 'hello-world',
    appVersion: '0.0.1',
    execSystemId: 'frontera',
    execSystemLogicalQueue: 'development',
  },
  licenseType: null,
  isInteractive: false,
};
