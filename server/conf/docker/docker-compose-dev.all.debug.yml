# This compose file is useful for testing https.
# The .env file sets ENVVARS for the Docker CLI used by this compose file.
---
version: "3"
services:
  redis:
    image: redis:4.0
    volumes:
      - cep_prtl_redis_data:/data
    ports:
      - 6379:6379
    container_name: cep_prtl_redis
    hostname: cep_prtl_redis
    networks:
      - cep_prtl_net

  rabbitmq:
    image: rabbitmq:3.6.10-management
    volumes:
      - cep_prtl_rabbitmq_data:/var/lib/rabbitmq/mnesia/rabbit@des_rabbitmq
    env_file: ../env_files/rabbitmq.env
    ports:
      - 5672:5672
      - 5673:5673
      - 15673:15673
      - 15672:15672
    container_name: cep_prtl_rabbitmq
    hostname: cep_prtl_rabbitmq
    networks:
      - cep_prtl_net

  memcached:
    image: memcached:latest
    container_name: cep_prtl_memcached
    hostname: cep_prtl_memcached
    networks:
      - cep_prtl_net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.1
    ulimits:
      memlock: -1
    environment:
      - ES_HEAP_SIZE:2g
    volumes:
      - ../elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - cep_prtl_es_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    container_name: cep_prtl_elasticsearch
    hostname: cep_prtl_elasticsearch
    networks:
      - cep_prtl_net

  postgres:
    image: postgres:10.3
    volumes:
      - cep_prtl_postgres_data:/var/lib/postgresql/data/portal
    ports:
      - 5432:5432
    container_name: cep_prtl_postgres
    hostname: cep_prtl_postgres
    networks:
      - cep_prtl_net
    environment:
      - POSTGRES_PASSWORD=dev
      - POSTGRES_USER=dev
      - POSTGRES_DB=dev
      - PGDATA=/var/lib/postgresql/data/portal

  nginx:
    image: nginx
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx/gzip.conf:/etc/nginx/gzip.conf
      - ../nginx/certificates/cep.dev.crt:/etc/ssl/cep.dev.crt
      - ../nginx/certificates/cep.dev.key:/etc/ssl/cep.dev.key
      - ../nginx/dhparam.pem:/etc/ssl/dhparam.pem
      - ../../../.:/srv/www/portal
    links:
      - django:django
    ports:
      - 80:80
      - 443:443
    container_name: cep_prtl_nginx
    hostname: cep_prtl_nginx
    networks:
      - cep_prtl_net

  django:
    image: cep-portal/portal:local
    links:
      - memcached:memcached
      - postgres:postgres
      - rabbitmq:rabbitmq
      - redis:redis
      - elasticsearch:elasticsearch
    volumes:
      - ../../../.:/srv/www/portal
      - ../../data/static:/var/www/portal/server/static
      - ../../data/media:/var/www/portal/server/media
    ports:
      - 8000:8000
      - 5555:5555
      - 9000:9000
    dns:
      - 8.8.8.8
      - 8.8.4.4
    stdin_open: true
    tty: true
    #command: nohup npm --prefix=/srv/www/portal/client run-script dev 2>&1 & ./manage.py runserver 0.0.0.0:8000
    #command: ['python', '-m', 'ipdb', './manage.py', 'runserver', '0.0.0.0:8000']
    command: ['python', './manage.py', 'runserver', '0.0.0.0:8000']
    container_name: cep_prtl_django
    hostname: cep_prtl_django
    networks:
      - cep_prtl_net

  workers:
    image: cep-portal/portal:local
    links:
      - memcached:memcached
      - postgres:postgres
      - rabbitmq:rabbitmq
      - redis:redis
      - elasticsearch:elasticsearch
    volumes:
      - ../../../.:/srv/www/portal
      - ../../data/static:/var/www/portal/server/static
      - ../../data/media:/var/www/portal/server/media
    dns:
      - 8.8.8.8
      - 8.8.4.4
    command: "celery -A portal worker --concurrency=2"
    container_name: cep_prtl_workers
    hostname: cep_prtl_workers
    networks:
      - cep_prtl_net

volumes:
  cep_prtl_redis_data:
  cep_prtl_es_data:
  cep_prtl_rabbitmq_data:
  cep_prtl_postgres_data:

networks:
  cep_prtl_net:
    driver: bridge
